main es la rama inicial
HEAD es tu punto acutal de trabajo no tiene por que estar en la rama principal

ls          --- listado directorios carpeta actual
cd          --- Seleccionar nuevo directorios
cd..        --- Acceder a carpeta anterior
pwd         --- Te pinta directorio actual
mkdir "nombre_carpeta"  --- Creacion de carpeta
code .  --- Abrir visual studio code
clear ---   Limpiar consola
git status ---  Ficheros
git commit  --- Realizar salvaguarda de archivos añadidos
git commit -m "comentario" --- Realizar salvaguarda de archivos añadidos y copiando directamente el comentario sin entrar al editor VIM
git log --- para ver logging de versiones
git reflog --- historial completo de log con checkout y todo lo que hagamos registrado
git checkout ---    coje la ultima version commiteada y la restaura
git checkout main --- para movernos donde tengamos el main
git checkout tags/"nombre del tag" ---- te lleva a la version donde esta ese tag
git reset ---   resetea los archivos con cargando la ultima version guardada
git reset HEAD~1 --- Para volver al commit anterior en caso de equivocacion
git reset --hard "id de el punto a donde queremos movernos"   ---- mueve la caveza al punto que le especificamos
git add --- para añadir archivos nuevos o modificados y despues hacer el commit
git add *.html --- para añadir todos los archivos nuevos o modificados que terminan en .html y despues hacer el commit
git add . --- para añadir todos los archivos nuevos o modificados de golpe y despues hacer el commit
git remote add origin https://github.com/garna013/curso_github.git  ---  vincula nuestro repositorio local con uno de github
git push -u origin "nombre rama" --- subir el repositorio local aun no subidos en github
git push --- subir cambios sobre ramas ya creadas en github
git tag  --- enumera todos los tags creados
git tag "nombre del tag"  --- se crea un tag o etiqueta en la version actual
git branch "nombre de la nueva rama"   --- crea una nueva rama
git branch -d "nombre de la rama"  ---  elimina rama especificada
git switch "nombre rama"  ---  desplaza el head a la rama que le indiques
git merge "nombre de la rama"  ---  combina la rama en la que esta el head con la rama que selecionemos
git stash  ---  realicia una copia temporal que no no genera un commit que se guarde en el arbol
git stash list  ---  lista los stash guardados
git stash pop   ---  para traer de vuelta los cambios realizados y guardados en stash
git stash drop  ---  borra lo que tubieramos guardado en stash
git diff  ---  nos permite ver diferencias entre ficheros y entre commits
git fetch   ---  descarga historial de cambios en github pero sin los cambios
git pull   --- descarga cambios e historial de github
git pull origin master





Documento con comandos basicos git
https://training.github.com/downloads/es_ES/github-git-cheat-sheet.pdf


touch "nombre archivo"  ----  Para crear un archivo desde el bash de git



.gitignore --- Fichero donde añadimos los archivos que no queremos que se verifiquen
C:\Users\s001135 directorio donde esta el archivo de configuracion oculto de git

**/"nombre archivo"   escribiendo eso en el .gitignore omitira la revision de el archivo con ese nombre
